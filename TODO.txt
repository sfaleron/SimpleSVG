
Removing layers need not be irreversable, keep track of them in the root node

importer should keep track of tags added and replaced

The flags stuff, it's not going to work so well. It should work like the argspluplus, with an inheritence stack of mostly independent classes, I think.

How to wrap <use>, <clipPath>? The implementation might be restraining.

SVG spec has a few categories, but MDN might be better
https://developer.mozilla.org/en-US/docs/Web/SVG/Element#SVG_elements_by_category

Test: copy, EmbedStack, freeze_attrs

decorations might include
  right angle symbol
    works like arc
  perpedicular bars terminating segments
    work like ticks

  text aligned/centered wrt two points, with a perpendicular offset parameter.
  segment labels suggest point labels. got some of those already, shift em over!


Need a way to reference some document-wide options, such as changing colors or linewidths "globally". CSS, right? Well, that depends on the user-agent at rendering time. Something to do when the document is created would be useful, but maybe not necessary in a hurry.

push_layer() sets the element id based on the label, that should probably be a default action

meh.. set key afterwards on returned element is very clear/easy

SVG v2 incorporates the elements from xlink namespace, the "xlink:" qualifier is toast, in the standard; implementations will vary. inkscape may be pickier than the browsers; they will probably try harder to retain compatibility. At least one recent source has Safari working better the old way.

How to deal consistently, clearly with flipped y-axis. Substitute atan(), sin() seem nice, but probably not comprehensive enough to resolve all cases. a transformation function would be nice, but how to keep track of it, withough making it obligatory to all calls? seems like a class wrapping the whole library would do this, but that's a big chore.

generalized.py might miss the flipped y corrections.. or not need them?

aiming to put comments tagged "IVY" wherever the inverted-y issue is relevant.. should be done, although misses are conceivable

save legend as latex, process offline to svg with mathjax and some browserless javascript. When the lengend is added, include a svg switch for horizontal/ vertical/ landscape/ portrait layout. maybe another switch to reverse order.

library support for svg events might be nice to have. probably not specific appearance details, though. Javascript would be needed.. seems like it could be inlined at the end of the document and would work as expected? cdata inside a script element, last child of svg element, or anywhere really, if it's all definitions and no execution, or inside a "load" event listener otherwise.

Add angle labels to the decorations sample
add pen-off to the turntests sample

css or some other support for ponoko output

triphi depends on filterplexer and registry, those would need to go public first;
maybe upload the output to github.
